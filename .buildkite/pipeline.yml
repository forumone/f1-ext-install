env:
  RUST_VERSION: '1.39'

steps:
  - label: ":rust: Lint"
    commands:
      - rustup component add rustfmt
      - cargo fmt -- --check
    plugins:
      - docker#v3.3.0:
          image: rust:$RUST_VERSION-slim

  - label: ":rust: :clippy:"
    commands:
      - rustup component add clippy
      - cargo clippy
    plugins:
      - docker#v3.3.0:
          image: rust:$RUST_VERSION-slim

  # Build and share a debug copy of the f1-ext-install command
  - label: ":rust: :hammer: Build"
    commands:
      # Build the binary against the musl target (since it runs in an Alpine container)
      - rustup target add x86_64-unknown-linux-musl
      - cargo build --bins --locked --target x86_64-unknown-linux-musl

      # Build the tests against glibc because we run these on the host system
      # (this avoids a bunch of nonsense requiring musl-gcc and friends)
      - cargo build --tests --locked

      # Post-process the integration tests - Cargo outputs the name with a hash, but we
      # want to be able to run them on the host system, so we'll need to make the name
      # more predicatble
      - find target/debug -maxdepth 1 -executable -name 'builtin-*' -execdir mv {} builtin \;
      - find target/debug -maxdepth 1 -executable -name 'pecl-*' -execdir mv {} pecl \;
    plugins:
      - docker#v3.3.0:
          image: rust:$RUST_VERSION-slim
      - artifacts#v1.2.0:
          upload:
            # Binaries
            - target/x86_64-unknown-linux-musl/debug/f1-ext-install
            - target/x86_64-unknown-linux-musl/debug/versions
            # Integration tests
            - target/debug/builtin
            - target/debug/pecl

  - wait: ~

  # Run unit and doctests
  - label: ":rust: Unit tests"
    commands:
      - cargo test --lib --bins
    plugins:
      - docker#v3.3.0:
          image: rust:$RUST_VERSION-slim

  # Run cheap sanity tests against selected builtin extensions
  - label: ":docker: Builtin tests"
    commands:
      # HACK: pre-19.03 engines (verified on 18.09) will crash Bollard if an image needs
      # to be pulled during an image build, so we do it ahead of time until our builders
      # are upgraded to the 19.03 daemon.
      - docker pull php:7.3-cli-alpine
      - chmod +x target/debug/builtin
      - target/debug/builtin
    plugins:
      - artifacts#v1.2.0:
          download:
            - target/x86_64-unknown-linux-musl/debug/f1-ext-install
            - target/debug/builtin

  # Run sanity tests against PECL extensions
  - label: ":docker: PECL tests"
    commands:
      # See note above for why we're pulling before testing
      - docker pull php:7.3-cli-alpine
      - chmod +x target/debug/pecl
      - target/debug/pecl
    plugins:
      - artifacts#v1.2.0:
          download:
            - target/x86_64-unknown-linux-musl/debug/f1-ext-install
            - target/debug/pecl

  - wait: ~

  # Build release image
  - label: ":docker: Build & Publish"
    branches: master
    commands:
      - bash .buildkite/build.sh
    plugins:
      - artifacts#v1.2.0:
          download: target/x86_64-unknown-linux-musl/debug/versions
      - seek-oss/aws-sm#v2.0.0:
          env:
            DOCKER_LOGIN_PASSWORD: buildkite/dockerhubid
      - docker-login#v2.0.1:
          username: f1builder
          password-env: DOCKER_LOGIN_PASSWORD
