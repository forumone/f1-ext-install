env:
  RUST_VERSION: '1.39'

steps:
  - label: ":rust: Lint"
    commands:
      - rustup component add rustfmt
      - cargo fmt -- --check
    plugins:
      - docker#v3.3.0:
          image: rust:$RUST_VERSION-slim

  - label: ":rust: :clippy:"
    commands:
      - rustup component add clippy
      - cargo clippy
    plugins:
      - docker#v3.3.0:
          image: rust:$RUST_VERSION-slim

  # Build and share a debug copy of the f1-ext-install command
  - label: ":rust: :hammer: Build"
    commands:
      - rustup target add x86_64-unknown-linux-musl
      - cargo build --all --locked --target x86_64-unknown-linux-musl
    plugins:
      - docker#v3.3.0:
          image: rust:$RUST_VERSION-slim
      - artifacts#v1.2.0:
          upload: [target/x86_64-unknown-linux-musl/debug/f1-ext-install, target/x86_64-unknown-linux-musl/debug/versions]

  - wait: ~

  # Run unit and doctests
  - label: ":rust: Unit tests"
    commands:
      - cargo test
    plugins:
      - docker#v3.3.0:
          image: rust:$RUST_VERSION-slim

  # Run cheap sanity tests against selected builtin extensions
  - label: ":docker: Builtin tests"
    commands:
      - bash test/builtin.sh
    plugins:
      - artifacts#v1.2.0:
          download: target/x86_64-unknown-linux-musl/debug/f1-ext-install

  # Run sanity tests against PECL extensions
  - label: ":docker: PECL tests"
    commands:
      - bash test/pecl.sh
    plugins:
      - artifacts#v1.2.0:
          download: target/x86_64-unknown-linux-musl/debug/f1-ext-install

  - wait: ~

  # Build release image
  - label: ":docker: Build & Publish"
    branches: master
    commands:
      - bash .buildkite/build.sh
    plugins:
      - artifacts#v1.2.0:
          download: target/x86_64-unknown-linux-musl/debug/versions
      - seek-oss/aws-sm#v2.0.0:
          env:
            DOCKER_LOGIN_PASSWORD: buildkite/dockerhub
      - docker-login#v2.0.1:
          username: f1builder
          password-env: DOCKER_LOGIN_PASSWORD
